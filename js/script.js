// 1. Создаем 8 объектов - песен (название, текст,фото, аудио)

const objectOne = {
	name: 'Группа крови',
	poem: `Теплое место, но улицы ждут отпечатков наших ног.
Звездная пыль - на сапогах.
Мягкое кресло, клетчатый плед, не нажатый вовремя курок.
Солнечный день - в ослепительных снах.

Группа крови - на рукаве, 
Мой порядковый номер - на рукаве,
Пожелай мне удачи в бою, пожелай мне:
Не остаться в этой траве, 
не остаться в этой траве.
Пожелай мне удачи, пожелай мне удачи!

И есть чем платить, но я не хочу победы любой ценой.
Я никому не хочу ставить ногу на грудь.
Я хотел бы остаться с тобой, просто остаться с тобой,
Но высокая в небе звезда зовет меня в путь.`,
	portrait: 'https://cdn.glitch.global/f899e804-138d-4e8f-bf5b-8402b428c1cb/pic-1.jpg?v=1647196236437',
	song: 'https://cdn.glitch.global/f899e804-138d-4e8f-bf5b-8402b428c1cb/song_gruppa%20krovi.mp3?v=1647196321962'
}

const objectTwo = {
	name: 'Кукушка',
	poem: `Песен еще ненаписанных, сколько?
Скажи, кукушка, пропой.
В городе мне жить или на выселках,
Камнем лежать или гореть звездой? Звездой.

Солнце мое - взгляни на меня,
Моя ладонь превратилась в кулак,
И если есть порох - дай огня.
Вот так...

Кто пойдет по следу одинокому?
Сильные да смелые головы сложили в поле в бою.
Мало кто остался в светлой памяти,
В трезвом уме да с твердой рукой в строю, в строю.

Солнце мое - взгляни на меня,
Моя ладонь превратилась в кулак,
И если есть порох - дай огня.
Вот так...

Где же ты теперь, воля вольная?
С кем же ты сейчас ласковый рассвет встречаешь? Ответь.
Хорошо с тобой, да плохо без тебя,
Голову да плечи терпеливые под плеть, под плеть.`,
	portrait: 'https://cdn.glitch.global/f899e804-138d-4e8f-bf5b-8402b428c1cb/pic-2.jpg?v=1647196244991',
	song: 'https://cdn.glitch.global/f899e804-138d-4e8f-bf5b-8402b428c1cb/song_kukushka.mp3?v=1647196408908'
}

const objectThree = {
	name: 'Печаль',
	poem: `На холодной земле стоит город большой
Там горят фонари и машины гудят
А над городом ночь, а над ночью луна
И сегодня луна каплей крови красна

Дом стоит, свет горит
Из окна видна даль
Так откуда взялась печаль?
И, вроде, жив и здоров
И, вроде, жить не тужить
Так откуда взялась печаль?

А вокруг благодать — ни черта не видать
А вокруг красота — не видать ни черта
И все кричат: "Ура!", и все бегут вперёд
И над этим всем новый день встаёт

Дом стоит, свет горит
Из окна видна даль
Так откуда взялась печаль?
И, вроде, жив и здоров
И, вроде, жить не тужить
Так откуда взялась печаль?`,
	portrait: 'https://cdn.glitch.global/f899e804-138d-4e8f-bf5b-8402b428c1cb/pic-3.jpg?v=1647196253370',
	song: 'https://cdn.glitch.global/f899e804-138d-4e8f-bf5b-8402b428c1cb/song_pechal.mp3?v=1647196428392'
}

const objectFour = {
	name: 'Звезда по имени Солнце',
	poem: `Белый снег, серый лед, на растрескавшейся земле.
        Одеялом лоскутным на ней - город в дорожной петле.
        А над городом плывут облака, закрывая небесный свет.
        А над городом - желтый дым, городу две тысячи лет,
        Прожитых под светом Звезды по имени Солнце...

        И две тысячи лет - война, война без особых причин.
        Война - дело молодых, лекарство против морщин.
        Красная, красная кровь - через час уже просто земля,
        Через два на ней цветы и трава, через три она снова жива
        И согрета лучами Звезды по имени Солнце...

        И мы знаем, что так было всегда, 
        Что Судьбою больше любим,
        Кто живет по законам другим и кому умирать молодым.
        Он не помнит слово "да" и слово "нет", 
        Он не помнит ни чинов, ни имен.
        И способен дотянуться до звезд, не считая, что это сон,
        И упасть, опаленным Звездой по имени Солнце...`,
	portrait: 'https://cdn.glitch.global/f899e804-138d-4e8f-bf5b-8402b428c1cb/pic-4.jpg?v=1647196260412',
	song: 'https://cdn.glitch.global/f899e804-138d-4e8f-bf5b-8402b428c1cb/song_zvezda.mp3?v=1647196485081'
}

const objectFive = {
	name: 'Песня без слов',
	poem: `Песня без слов, ночь без сна
Всё в своё время, зима и весна
Каждой звезде свой неба кусок
Каждому морю дождя глоток

Каждому яблоку место упасть
Каждому вору возможность украсть
Каждой собаке палку и кость
И каждому волку зубы и злость

Снова за окнами белый день
День вызывает меня на бой
Я чувствую, закрывая глаза
Весь мир идёт на меня войной

Если есть стадо, есть пастух
Если есть тело должен быть дух
Если есть шаг, должен быть след
Если есть тьма, должен быть свет

Хочешь ли ты изменить этот мир?
Сможешь ли ты принять как есть?
Встать и выйти из ряда вон?
Сесть на электрический стул или трон?`,
	portrait: 'https://cdn.glitch.global/f899e804-138d-4e8f-bf5b-8402b428c1cb/pic-5.jpg?v=1647196268550',
	song: 'https://cdn.glitch.global/f899e804-138d-4e8f-bf5b-8402b428c1cb/song_pesnya%20bez%20slov.mp3?v=1647196457933'
}

const objectSix = {
	name: 'Перемен',
	poem: `Вместо тепла — зелень стекла,
Вместо огня — дым,
Из сетки календаря выхвачен день.
Красное солнце сгорает до тла,
День догорает с ним,
На пылающий город падает тень.

Перемен! - требуют наши сердца.
Перемен! - требуют наши глаза.
В нашем смехе и в наших слезах,
И в пульсации вен:
"Перемен!
Мы ждем перемен!"

Электрический свет продолжает наш день,
И коробка от спичек пуста,
Но на кухне синим цветком горит газ.
Сигареты в руках, чай на столе - 
Эта схема проста,
И больше нет ничего, всё находится в нас.

Мы не можем похвастаться мудростью глаз
И умелыми жестами рук,
Нам не нужно все это, чтобы друг друга понять.
Сигареты в руках, чай на столе - 
Так замыкается круг,
И вдруг нам становится страшно что-то менять.`,
	portrait: 'https://cdn.glitch.global/f899e804-138d-4e8f-bf5b-8402b428c1cb/pic-6.jpg?v=1647196277369',
	song: 'https://cdn.glitch.global/f899e804-138d-4e8f-bf5b-8402b428c1cb/song_peremen.mp3?v=1647196439007'
}

const objectSeven = {
	name: 'Спокойная ночь',
	poem: `Крыши домов дрожат под тяжестью дней,
Небесный пастух пасёт облака,
Город стреляет в ночь дробью огней,
Но ночь сильней, её власть велика.

Тем, кто ложится спать –
Спокойного сна.
Спокойная ночь.
Тем, кто ложится спать –
Спокойного сна.
Спокойная ночь.

Я ждал это время, и вот это время пришло,
Те, кто молчал, перестали молчать.
Те, кому нечего ждать, садятся в седло,
Их не догнать, уже не догнать.

Тем, кто ложится спать –
Спокойного сна.
Спокойная ночь.
Тем, кто ложится спать –
Спокойного сна.
Спокойная ночь.

Соседи приходят, им слышится стук копыт,
Мешает уснуть, тревожат их сон.
Те, кому нечего ждать, отправляются в путь
Те, кто спасён, те, кто спасён.`,
	portrait: 'https://cdn.glitch.global/f899e804-138d-4e8f-bf5b-8402b428c1cb/pic-7.jpg?v=1647196283207',
	song: 'https://cdn.glitch.global/f899e804-138d-4e8f-bf5b-8402b428c1cb/song_spokoynaya%20noch.mp3?v=1647196469634'
}

const objectEight = {
	name: 'Красно-жёлтые дни',
	poem: `Застоялся мой поезд в депо
Снова я уезжаю, пора
На пороге ветер заждался меня
На пороге осень — моя сестра

После красно-желтых дней
Начнется и кончится зима
Горе ты мое от ума
Не печалься, гляди веселей
И я вернусь домой
Со щитом, а, может быть, на щите
В серебре, а, может быть, в нищете
Но как можно скорей

Расскажи мне о тех, кто устал
От безжалостных уличных драм
И о храме из разбитых сердец
И о тех, кто идет в этот храм

А мне приснилось: миром правит любовь
А мне приснилось: миром правит мечта
И над этим прекрасно горит звезда
Я проснулся и понял — беда`,
	portrait: 'https://cdn.glitch.global/f899e804-138d-4e8f-bf5b-8402b428c1cb/pic-8.jpg?v=1647196294014',
	song: 'https://cdn.glitch.global/f899e804-138d-4e8f-bf5b-8402b428c1cb/song_krasno-zheltye%20dni.mp3?v=1647196349033'
}

// 2. Создаем из вышесозданных объектов (песен) массив

const library = [objectOne, objectTwo, objectThree, objectFour, objectFive, objectSix, objectSeven, objectEight]
// вводим переменные
let poemIndex;
const firstPage = document.querySelector('.main');
const songLink = document.querySelectorAll('li');
const poemName = document.querySelectorAll('#poemName');
const par = document.querySelector('#par');
const photo = document.querySelector('#image');
const play = document.querySelector('#play');
const audio = document.querySelector('audio');
const icon = document.querySelector('#icon');
const home = document.querySelector('#home');
// на приветственной странице верхний экран. На нем список песен
// ставим подслушку на каждую песню
songLink.forEach(link => {
	link.addEventListener('click', () => {
        // при клике на нее: добавляем класс (верхний экран перемещается в левый верхний угол), вводим после этого действия - прозрачность 0,
        // ставим таймер - скрыть верхний экран через полторы секунды после его перемещения
		firstPage.classList.add('movePage');
		firstPage.style.opacity = '0';
		setTimeout(() => {
			firstPage.style.display = 'none'
		}, 1500);
        // берем массив песен и сравниваем название песни и содержимое li, по которому кликнул пользователь (чтобы сопоставить li и песню)
		library.forEach((item, index) => {
			if (item.name.toLowerCase().includes(link.textContent.toLocaleLowerCase())) {
                // при совпадении - заполняем нижний экран данными - заголовок песни, изображение, аудио файл
				document.querySelector('#poemName').textContent = item.name;
				document.querySelector('#image').src = item.portrait;
				audio.src = item.song;
                // присваиваем глобальной переменной poemIndex значение индекса из массива (конкретно этой песни)
				poemIndex = index;
                // через 1600мс вызываем функцию живого текста (она не сработает, пока верхний экран не исчезнет - display = 'none')
				setTimeout(live, 1600);
                // возвращаем значение poemIndex, чтобы оно могло быть использовано в функции 
				return poemIndex;
			}
		})
	})
})



// вводим подслушку на кнопку проигрывания аудио - клик
play.addEventListener('click', () => {
    // если в момент нажатия аудио было на паузе - начать проигрывать аудио, изменить иконку play на иконку pause
	if (audio.paused) {
		audio.play();
		icon.src = 'https://cdn.glitch.global/f899e804-138d-4e8f-bf5b-8402b428c1cb/iconPause.png?v=1647196216311';
	}
    // в противном случае аудио проигрывалось - поставить на паузу, изменить иконку pause на иконку play
	else {
		audio.pause();
		icon.src = 'https://cdn.glitch.global/f899e804-138d-4e8f-bf5b-8402b428c1cb/iconPlay.png?v=1647196220215';
	}
});
// вводим подслушку на аудио - если закончилось
audio.addEventListener('ended', () => {
    // если аудио закончилось - изменить иконку pause на иконку play 
	if (audio.ended) {
		icon.src = 'https://cdn.glitch.global/f899e804-138d-4e8f-bf5b-8402b428c1cb/iconPlay.png?v=1647196220215';
	}
})

// водим подслушка на кнопку (клик) - возврат на верхний экран - стрелка назад
home.addEventListener('click', () => {
    // останавливаем аудио и изменить иконку pause на иконку play 
	audio.pause();
	icon.src = 'https://cdn.glitch.global/f899e804-138d-4e8f-bf5b-8402b428c1cb/iconPlay.png?v=1647196220215';
    // отображаем верхний экран
	firstPage.style.display = 'flex';
    // снимаем стиль movePage (экран сдвинут влево вверх)
	firstPage.classList.remove('movePage');
    // ставим таймер: чтобы после (!, не одновременно) этих событий убрать прозрачность экрана. Даже если поставить 0, то сработает после
	setTimeout(() => {
		firstPage.style.opacity = '1';
	}, 0);

})

// вводим переменную - счетчик на буквы
let i = 0;
// вводим постоянную - таймер на setTimeOut - чем в миллисекундах. Чем значение выше, тем медленнее будет прибавляться буква
const speed = 100;


//описываем функцию "живой" текст
function live() {
    // проверяем, что верхний экран скрыт (чтобы она зря не работала)
	if (firstPage.style.display === 'none') {

        
        // используем глобальную переменную poemIndex, чтобы обратиться к конкретной песне из массива
        // если счетчик i меньше длин этой песни
		if (i <= library[poemIndex].poem.length) {

            // то прибавляем букву, соответствующую значению счетчика, к содержимому текста и передаем значение в par (знак "+=" - как раз чтобы прибавить к уже имеющемуся содержимому)
			par.textContent += library[poemIndex].poem.charAt(i);
			i++;
            // ставим setTimeOut на эту функцию, чтобы ее "зациклить"
			setTimeout(live, speed);
		}

        // если текст песни показан полностью, то ставим другой таймер:
        // 5 секунд ничего не меняем.
        // через 5 секунд очищаем содержимое par, обнуляем счетчик
        // и запускаем зановой= эту же функцию
		else {
			setTimeout(() => {
				par.textContent = '';
				i = 0;
				setTimeout(live, speed);
			}, 5000);
		}
	}

    // в случаем, если верхний экран отображается, очищаем содержимое par и обнуляем счетчик
	else {
		par.textContent = '';
		i = 0;
	}
}